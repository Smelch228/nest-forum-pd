// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  email        String    @unique
  passwordHash String
  role         Role      @default(USER)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  posts        Post[]
  comments     Comment[]
  Vote         Vote[]
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  userId     Int
  categoryId Int
  user       User      @relation(fields: [userId], references: [id])
  category   Category  @relation(fields: [categoryId], references: [id])
  comments   Comment[]
}

model Comment {
  id              Int       @id @default(autoincrement())
  content         String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  userId          Int
  postId          Int
  parentCommentId Int?
  user            User      @relation(fields: [userId], references: [id])
  post            Post      @relation(fields: [postId], references: [id])
  parentComment   Comment?  @relation("CommentThread", fields: [parentCommentId], references: [id])
  childComments   Comment[] @relation("CommentThread")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  posts       Post[]
}

model Vote {
  id          Int         @id @default(autoincrement())
  userId      Int
  upvote      Boolean     @default(true)
  votableId   Int // ID поста или комментария
  votableType VotableType // Тип объекта (POST или COMMENT)
  user        User        @relation(fields: [userId], references: [id])

  @@index([votableId, votableType]) // Индекс для оптимизации запросов
}

enum VotableType {
  POST
  COMMENT
}
